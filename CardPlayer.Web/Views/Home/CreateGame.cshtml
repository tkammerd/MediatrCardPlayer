@model CardPlayer.Data.Models.Game

@{
    ViewData["Title"] = "CreateGame";
}

<h1>CreateGame</h1>

@using (Html.BeginForm())
{
<div class="form-horizontal">
    <h4>Game</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.StandardDeckType,
            htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StandardDeckType,
                new SelectList(Enum.GetValues(typeof(StandardDecks))),
                "Select Deck Type");
            @Html.ValidationMessageFor(model => model.StandardDeckType, "",
                new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.HandSize,
            htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HandSize,
                new { htmlAttributes = new { @class = "form-control", style = "width: 100px" }, })
            @Html.ValidationMessageFor(model => model.HandSize, "",
                new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.MaximumPlayers,
            htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaximumPlayers,
                new { htmlAttributes = new { @class = "form-control", style = "width: 100px" }, })
            @Html.ValidationMessageFor(model => model.MaximumPlayers, "",
                new { @class = "text-danger" })
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Game" class="btn btn-primary" />
            </div>
        </div>
    </div>
</div>
}

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
